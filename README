#flask学习笔记
Flask是一个使用Python编写的轻量级Web应用框架。基于Werkzeug WSGI工具箱和Jinja2 模板引擎。Flask使用BSD授权。
Flask被称为“microframework”，因为它使用简单的核心，用extension增加其他功能。Flask没有默认使用的数据库、窗体验证工具。然而，Flask保留了扩增的弹性，可以用Flask-extension加入这些功能：ORM、窗体验证工具、文件上传、各种开放式身份验证技术。


from flask import Flask
app = Flask(__name__)  #create a flask app object

@app.route('URL') #define route url
@app.route('URL<args>') #define route url and args
with app.test_request_context() #create a request context env
from flask import url_for #define construct router
@app.errorhandler(404) #404 page

flask 引用模块：
request, redirect, render_template
session escape
from flask import make_response #在视图里操纵上述步骤结果的响应对象，可以使用 make_response() 函数。
session.('a', xx) #移除session a的信息
session.pop('a', xx) #移除session a的信息

python知识：
1 if a else 0 #如果a==True返回1否则返回0
with fun() as f： # f为fun()返回值
with 等价于：
try:
    执行__enter__函数
    执行 with_block
finally:
    执行__exit__内容
python中的with的作用是自动释放对象，即使对象在使用的过程中有异常抛出。可以使用with的类型必须实现__enter__ __exit__。类似于try...finally,在finally中调用了释放函数。 


#Tornade Web框架

Tornado全称Tornado Web Server，是一个用Python语言写成的Web服务器兼Web应用框架，由FriendFeed公司在自己的网站FriendFeed中使用，被Facebook收购以后框架以开源软件形式开放给大众。

作为Web服务器，是一个轻量级的Web框架，Tornado有较为出色的抗负载能力，官方用nginx反向代理的方式部署Tornado和其它Python web应用框架进行对比，结果最大浏览量超过第二名近40%。